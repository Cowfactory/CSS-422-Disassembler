00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2018 4:48:56 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Team Visual Basic's Disassembler: Output Builder
00000000                             3  * Written by :  Henry Hong, Dylan Desmond, Austin Abeyta
00000000                             4  * Date       :  3/6/2018
00000000                             5  * Description:  CSS422 Final Project
00000000                             6  *               Machine code to Motorola 68000 Assembly
00000000                             7  *               Output Builder generates the 
00000000                             8  *                   0xADDR OPCODE $OPERAND
00000000                             9  *               Sequence in order for printing purpose
00000000                            10  *-----------------------------------------------------------
00000000                            11  
00000000  4EB9 00000018             12  BUILD_STR   JSR         PREPARE_OP          ;Define a location in memory to write an OPCODE string to
00000006  4EB9 0000001E             13              JSR         GET_ADDR            ;Accumulate the OPCODE's address into the A4 string [0xADDR]
Line 14 ERROR: Undefined symbol
0000000C  4EB9 004DBB8E             14              JSR         JT_START            ;Send OPCODE to jump table for decoding [OPCODE $OPERAND]
00000012  18FC 0000                 15              MOVE.B      #0,(A4)+            ;End the string with a 0 delimiter
00000016                            16              
00000016  4E75                      17              RTS                             ;Return back to main disassembler loop
00000018                            18  
00000018                            19  *-Prepare OPCODE REG----------------------------------------
Line 20 ERROR: Undefined symbol
00000018  387C BB8E                 20  PREPARE_OP  MOVE.W      #OP_ADDR,A4         ;Define a location in memory to write an OPCODE string to
0000001C  4E75                      21              RTS
0000001E                            22              
0000001E                            23  *-Accumulate the 0xADDR Into String-------------------------
0000001E  200D                      24  GET_ADDR    MOVE.L      A5,D0               ;Save the address pointer into D0
00000020  4282                      25              CLR.L       D2                  ;Clear D2
00000022  143C 0008                 26              MOVE.B      #8,D2               ;Counter var starts at 8
00000026                            27              
00000026  4EB9 0000003A             28  GA_LOOP     JSR         HEX_2_ASCII         ;Convert the hex to ascii for printing
0000002C  5342                      29              SUBI        #1,D2               ;Decrement counter var
0000002E  B43C 0000                 30              CMP.B       #0,D2               ;Is counter var == 0?
00000032  6EF2                      31              BGT         GA_LOOP             ;If not, loop         
00000034                            32              
00000034  18FC 0009                 33              MOVE.B      #09,(A4)+           ;Otherwise, we are done. Append a tab
00000038  4E75                      34              RTS                             ;Return back to main disassembler loop    
0000003A                            35  
0000003A                            36  *-Accumulate the 0xADDR Into String-------------------------
0000003A  E998                      37  HEX_2_ASCII ROL.L       #4,D0               ;Get the most significant hex digit into the right 4 bits
0000003C  1200                      38              MOVE.B      D0,D1               ;Save that byte into D1
0000003E  0241 000F                 39              ANDI        #$0F,D1             ;Isolate the hex digit 
00000042                            40              
00000042  B23C 0009                 41              CMP.B       #$9,D1              ;If hex digit is > 9
00000046  6E00 0006                 42              BGT         APPND_ALPHA         ;It is an alphabet ascii char. Branch
0000004A  6000 000A                 43              BRA         APPND_NUM           ;Else it is a numeric ascii char. Branch
0000004E                            44              
0000004E  0601 0037                 45  APPND_ALPHA ADDI.B      #$37,D1             ;Add $37 to make it a ascii alphabet char
00000052  18C1                      46              MOVE.B      D1,(A4)+            ;Append this character to string
00000054  4E75                      47              RTS           
00000056                            48  
00000056  0601 0030                 49  APPND_NUM   ADDI.B      #$30,D1             ;Add $30 to make it a ascii numeric char
0000005A  18C1                      50              MOVE.B      D1,(A4)+            ;Append this character to string
0000005C  4E75                      51              RTS
0000005E                            52         
0000005E                            53  
0000005E                            54  
Line 55 WARNING: END directive missing, starting address not set

2 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
APPND_ALPHA         4E
APPND_NUM           56
BUILD_STR           0
GA_LOOP             26
GET_ADDR            1E
HEX_2_ASCII         3A
PREPARE_OP          18
