00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/4/2018 10:30:49 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Team Visual Basic's Dissassembler: Jump Table
00000000                             3  * Written by :  Henry Hong, Dylan Desmond, Austin Abeyta
00000000                             4  * Date       :  2/27/2018
00000000                             5  * Description:  CSS422 Final Project
00000000                             6  *               Machine code to Motorola 68000 Assembly
00000000                             7  *               Determines the OPCODE and Effective Addressing from an input
00000000                             8  *-----------------------------------------------------------
00000000                             9  
00000000                            10  *-----------------------------------------------------------
00000000                            11  *-Start Section
00000000                            12  *-Start determining OPCODE based off the first four bits
00000000                            13  *-and branching off into 16 bin possibilities
00000000                            14  *-----------------------------------------------------------
00000000                            15  
00000000  3EBC 4E71                 16  JT_START    MOVE.W      #$4E71,(A7)     *Load test for Nop into (A7)
00000004                            17              
00000004  3410                      18              MOVE.W      (A0),D2         *move op code into d2 to bit shift
00000006  E84A                      19              LSR.W       #4,D2           *Shift right 4 bits
00000008  E84A                      20              LSR.W       #4,D2           *shift right 4 bits
0000000A  E84A                      21              LSR.W       #4,D2           *shift right 4 bits
0000000C                            22              
0000000C  0C42 0000                 23              CMPI.W      #0,D2           *check if it falls into 0 bin
00000010  6700 007A                 24              BEQ         BIN_0
00000014                            25      
00000014  0C42 0001                 26              CMPI.W      #1,D2           *check if it is a MOVE
00000018  6700 009E                 27              BEQ         BIN_MOVE
0000001C                            28              
0000001C  0C42 0002                 29              CMPI.W      #2,D2           *check if it is a MOVE
00000020  6700 0096                 30              BEQ         BIN_MOVE
00000024                            31              
00000024  0C42 0003                 32              CMPI.W      #3,D2           *check if it is a MOVE
00000028  6700 008E                 33              BEQ         BIN_MOVE
0000002C                            34              
0000002C  0C42 0004                 35              CMPI.W      #4,D2           *check if it falls into 4 bin
00000030  6700 009A                 36              BEQ         BIN_4
00000034                            37  
00000034  0C42 0005                 38              CMPI.W      #5,D2           *check if it falls into 5 bin
00000038  6700 00D0                 39              BEQ         BIN_5
0000003C                            40  
0000003C  0C42 0006                 41              CMPI.W      #6,D2           *check if it falls into 6 bin
00000040  6700 00CC                 42              BEQ         BIN_6
00000044                            43  
00000044  0C42 0007                 44              CMPI.W      #7,D2           *check if it falls into 7 bin
00000048  6700 00EE                 45              BEQ         BIN_7
0000004C                            46  
0000004C  0C42 0008                 47              CMPI.W      #8,D2           *check if it falls into 8 bin
00000050  6700 00E6                 48              BEQ         BIN_8
00000054                            49  
00000054  0C42 0009                 50              CMPI.W      #9,D2           *check if it falls into 9 bin
00000058  6700 00F2                 51              BEQ         BIN_9
0000005C                            52  
0000005C  0C42 000A                 53              CMPI.W      #10,D2          *check if it falls into 10 bin
00000060  6700 00EE                 54              BEQ         BIN_10
00000064                            55  
00000064  0C42 000B                 56              CMPI.W      #11,D2          *check if it falls into 11 bin
00000068  6700 00E6                 57              BEQ         BIN_11
0000006C                            58  
0000006C  0C42 000C                 59              CMPI.W      #12,D2          *check if it falls into 12 bin
00000070  6700 00F8                 60              BEQ         BIN_12
00000074                            61  
00000074  0C42 000D                 62              CMPI.W      #13,D2          *check if it falls into 12 bin
00000078  6700 00F4                 63              BEQ         BIN_13
0000007C                            64  
0000007C  0C42 000E                 65              CMPI.W      #14,D2          *check if it falls into 14 bin
00000080  6700 0108                 66              BEQ         BIN_14
00000084                            67  
00000084  0C42 000F                 68              CMPI.W      #15,D2          *check if it falls into 15 bin
00000088  6700 0120                 69              BEQ         BIN_15
0000008C                            70  
0000008C                            71  *-BIN 0--------------------------------------------------------    
0000008C  3410                      72  BIN_0       MOVE.W      (A0),D2         *reload opcode
0000008E  E04A                      73              LSR.W       #8,D2           *shift bits to the right 8
00000090  C47C 000F                 74              AND.W       #$0F,D2         *Isolate the last 4 bits
00000094  0C42 000C                 75              CMPI.W      #12,D2          *Check if the bit is C
00000098  6700 0122                 76              BEQ         CMPI            *if CMPI go to the SUB
0000009C  0C42 0000                 77              CMPI.W      #0,D2           *Check if the bit is a 0
000000A0  6700 010E                 78              BEQ         ORI             *if ORI go to the SUB
000000A4  0C42 0008                 79              CMPI.W      #8,D2           *Check if the bit is an 8
000000A8  6700 011E                 80              BEQ         BCLR            *if BCLR immediate go to SUB
000000AC  C47C 0001                 81              AND.W       #$01,D2         *isolate the last bit
000000B0  0C42 0001                 82              CMPI.W      #1,D2           *Check if the bit is a 1
000000B4  6700 0112                 83              BEQ         BCLR            *if BCLR register go to SUB
000000B8                            84              *BRA         DATA           
000000B8                            85      
000000B8  3410                      86  BIN_MOVE    MOVE.W      (A0),D2         *reload opcode
000000BA  EC4A                      87              LSR.W       #6,D2           *shift bits to the right 6
000000BC  C47C 0007                 88              AND.W       #$07,D2         *isolate the last 3 bits
000000C0  0C42 0001                 89              CMPI.W      #1,D2           *check if the bits are 001
000000C4  6700 011A                 90              BEQ         MOVEA           *if MOVEA go to SUB
000000C8                            91              *CMPI.W      #7,D2           *check if the bits are 111
000000C8                            92              *BEQ         DATA            *if 111 must be DATA
000000C8  6000 010A                 93              BRA         MOVE            *otherwise must be MOVE
000000CC                            94  *-BIN 4--------------------------------------------------------    
000000CC  3410                      95  BIN_4       MOVE.W      (A0),D2         *reload opcode
000000CE  0C42 4E71                 96              CMPI.W      #$4E71,D2       *check for no-op value
000000D2  6700 0118                 97              BEQ         NOP             *if NOP go to SUB
000000D6  0C42 4E75                 98              CMPI.W      #$4E75,D2       *Compare with a constant value for JSR
000000DA  6700 011A                 99              BEQ         RTS             *if jsr go to jsr function
000000DE                           100              
000000DE  E84A                     101              LSR.W       #4,D2           *shift right 4 bits
000000E0  E84A                     102              LSR.W       #4,D2           *shift right 4 bits
000000E2  C47C 000F                103              AND.W       #$0F,D2         *bitmask first 4 bits  
000000E6  0C42 000E                104              CMPI.W      #$E,D2          *compare final masked bits
000000EA  6700 0128                105              BEQ         JSR             *if it equals E it is
000000EE                           106              
000000EE  0C42 0004                107              CMPI.W      #$4,D2          *check for defining bits
000000F2  6700 012A                108              BEQ         NEG             *branch to NEG routine
000000F6  C47C 0001                109              AND.W       #$1,D2
000000FA  0C42 0001                110              CMPI.W      #1,D2
000000FE  6700 0100                111              BEQ         LEA
00000102  0C42 0000                112              CMPI.W      #0,D2
00000106  6700 0102                113              BEQ         MOVEM
0000010A                           114              
0000010A                           115  *-BIN 5--------------------------------------------------------    
0000010A  6000 011C                116  BIN_5       BRA         SUBQ            *SUBQ is the only option for this bin so branch to SUB
0000010E                           117  
0000010E                           118  *-BIN 6--------------------------------------------------------    
0000010E  3410                     119  BIN_6       MOVE.W      (A0),D2         *reload fresh op code
00000110  E84A                     120              LSR.W       #4,D2           *shift right 4
00000112  E84A                     121              LSR.W       #4,D2           *shift right 4
00000114  C47C 000F                122              AND.W       #$0F,D2          *Finds the condition code of the branch statement through bitmask
00000118  0C42 0004                123              CMPI.W      #4,D2
0000011C  6700 0134                124              BEQ         BCC             *branch to BCC code
00000120  0C42 0008                125              CMPI.W      #8,D2
00000124  6700 0122                126              BEQ         BVC             *branch to BVC code
00000128  0C42 0005                127              CMPI.W      #5,D2
0000012C  6700 0110                128              BEQ         BCS             *branch to BCS code
00000130  0C42 000C                129              CMPI.W      #$C,D2
00000134  6700 00FE                130              BEQ         BGE             *branch to BGE code
00000138                           131  
00000138                           132  *-BIN 7--------------------------------------------------------    
00000138                           133  BIN_7       *BRA        DATA            *If it goes into this bin it is DATA
00000138                           134  
00000138                           135  *-BIN 8--------------------------------------------------------      
00000138  3410                     136  BIN_8       MOVE.W      (A0),D2
0000013A  EC4A                     137              LSR.W       #6,D2
0000013C  C47C 0007                138              AND.W       #$07,D2   
00000140  0C42 0007                139              CMPI.W      #7,D2
00000144  6700 0116                140              BEQ         DIVS
00000148  6000 011C                141              BRA         OR  
0000014C                           142  *-BIN 9--------------------------------------------------------    
0000014C  6000 0122                143  BIN_9       BRA         SUB             *SUB is the only option for this bin so branch to SUB
00000150                           144  
00000150                           145  *-BIN 10-------------------------------------------------------    
00000150                           146  BIN_10      *BRA        DATA            *If it goes into this bin it is DATA
00000150                           147  
00000150                           148  *-BIN 11-------------------------------------------------------    
00000150  3410                     149  BIN_11      MOVE.W      (A0),D2             *reload opcode into D2
00000152  E84A                     150              LSR.W       #4,D2               *shift bits to the right 4
00000154  E84A                     151              LSR.W       #4,D2               *Shift bits to the right 4
00000156  C47C 0001                152              AND.W       #$01,D2             *isolate the last bit
0000015A  0C42 0001                153              CMPI.W      #1,D2               *check if the bit is a 1
0000015E  6700 011C                154              BEQ         EOR                 *if EOR go to the SUB
00000162  0C42 0000                155              CMPI.W      #0,D2               *check if the bit is a 0
00000166  6700 0120                156              BEQ         CMP                 *if CMP go to the SUB
0000016A                           157              *BRA        DATA                *if neither EOR or CMP must be DATA
0000016A                           158  *-BIN 12-------------------------------------------------------    
0000016A  6000 0128                159  BIN_12      BRA         MULS                *MULS is the only option for this bin so branch to SUB
0000016E                           160  
0000016E                           161  *-BIN 13-------------------------------------------------------    
0000016E  3410                     162  BIN_13      MOVE.W      (A0),D2             *reload opcode into D2
00000170  EC4A                     163              LSR.W       #6,D2               *shift bits to the right 6
00000172  C47C 0007                164              AND.W       #$07,D2             *isolate the last 3 bits
00000176  0C42 0003                165              CMPI.W      #$3,D2              *check if the bits are 011
0000017A  6700 0130                166              BEQ         ADDA                *if ADDA go to SUB
0000017E  0C42 0007                167              CMPI.W      #$7,D2              *check if the bits are 111
00000182  6700 0128                168              BEQ         ADDA                *if ADDA go to SUB
00000186  6000 0118                169              BRA         ADD                 *if bits are not ADDA must be ADD and go to SUB
0000018A                           170              
0000018A                           171  *-BIN 14-------------------------------------------------------    
0000018A  3410                     172  BIN_14      MOVE.W      (A0),D2             *Reload the opcode
0000018C  E64A                     173              LSR.W       #3,D2               *shift bits down
0000018E  C47C 0007                174              AND.W       #$07,D2             *mask bits
00000192  B47C 0001                175              CMP.W       #1,D2               *determin which kind of shift it is
00000196  6700 0120                176              BEQ         LOGICSHIFT          *bra to logic shift
0000019A  B47C 0000                177              CMP.W       #0,D2
0000019E  6700 013A                178              BEQ         ARITH_SHIFT         *bra to arthimetic shift
000001A2  B47C 0003                179              CMP.W       #3,D2
000001A6  6700 013E                180              BEQ         ROTATE              *bra to rotate
000001AA                           181  *-BIN 15-------------------------------------------------------    
000001AA                           182  BIN_15      *BRA        DATA                *IF it goes into this bin it is DATA
000001AA                           183        
000001AA                           184  
000001AA                           185  
000001AA                           186  *-PRINT OP-----------------------------
000001AA                           187  
000001AA                           188  PRINT_OP
000001AA  103C 000E                189              MOVE.B      #14,D0
000001AE  4E4F                     190              TRAP        #15
000001B0                           191  
000001B0                           192  
000001B0                           193  
000001B0                           194  *--------------------------------------------------------------
000001B0                           195  *-OPCODE Effective addressing and EA Mode decoding
000001B0                           196  *--------------------------------------------------------------
000001B0                           197  
000001B0                           198   
000001B0                           199  *-BIN 0--------------------------------------------------------
000001B0                           200              
000001B0  43F9 00000324            201  ORI         LEA         S_ORI,A1
000001B6  103C 000E                202              MOVE.B      #14,D0
000001BA  4E4F                     203              TRAP        #15
000001BC                           204              
000001BC                           205              
000001BC  43F9 00000328            206  CMPI        LEA         S_CMPI,A1
000001C2  103C 000E                207              MOVE.B      #14,D0
000001C6  4E4F                     208              TRAP        #15
000001C8                           209              
000001C8                           210              
000001C8  43F9 0000032D            211  BCLR        LEA         S_BCLR,A1
000001CE  103C 000E                212              MOVE.B      #14,D0
000001D2  4E4F                     213              TRAP        #15
000001D4                           214              
000001D4                           215  
000001D4                           216  *-BIN MOVE----------------------------------------------------- 
000001D4                           217             
000001D4  43F9 00000332            218  MOVE        LEA         S_MOVE,A1
000001DA  103C 000E                219              MOVE.B      #14,D0
000001DE  4E4F                     220              TRAP        #15
000001E0                           221              
000001E0  43F9 00000337            222  MOVEA       LEA         S_MOVEA,A1
000001E6  103C 000E                223              MOVE.B      #14,D0
000001EA  4E4F                     224              TRAP        #15
000001EC                           225              
000001EC                           226  
000001EC                           227  *-BIN 4-----------------------------------------------------
000001EC                           228  
000001EC  43F9 0000030A            229  NOP         LEA         S_NOP,A1
000001F2  4EB8 01AA                230              JSR         PRINT_OP
000001F6                           231              
000001F6                           232              
000001F6  43F9 0000034D            233  RTS         LEA         S_RTS,A1
000001FC  4EB8 01AA                234              JSR         PRINT_OP       
00000200                           235              
00000200  43F9 00000351            236  LEA         LEA         S_LEA,A1
00000206  4EB8 01AA                237              JSR         PRINT_OP
0000020A                           238              
0000020A  43F9 00000359            239  MOVEM       LEA         S_MOVEM,A1
00000210  4EB8 01AA                240              JSR         PRINT_OP
00000214                           241              
00000214  43F9 00000371            242  JSR         LEA         S_JSR,A1
0000021A  4EB8 01AA                243              JSR         PRINT_OP
0000021E                           244              
0000021E  43F9 00000355            245  NEG         LEA         S_NEG,A1
00000224  4EB8 01AA                246              JSR         PRINT_OP
00000228                           247               
00000228                           248              
00000228                           249  *-BIN 5-----------------------------------------------------
00000228                           250  
00000228  43F9 0000035F            251  SUBQ        LEA         S_SUBQ,A1
0000022E  103C 000E                252              MOVE.B      #14,D0
00000232  4E4F                     253              TRAP        #15
00000234                           254                         
00000234                           255  *-BIN 6-----------------------------------------------------
00000234                           256  
00000234  43F9 0000033D            257  BGE         LEA         S_BGE,A1
0000023A  4EB8 01AA                258              JSR         PRINT_OP
0000023E                           259              
0000023E                           260              
0000023E  43F9 00000341            261  BCS         LEA         S_BCS,A1
00000244  4EB8 01AA                262              JSR         PRINT_OP
00000248                           263              
00000248  43F9 00000345            264  BVC         LEA         S_BVC,A1  
0000024E  4EB8 01AA                265              JSR         PRINT_OP
00000252                           266              
00000252  43F9 00000349            267  BCC         LEA         S_BCC,A1
00000258  4EB8 01AA                268              JSR         PRINT_OP
0000025C                           269              
0000025C                           270  *-BIN 8-----------------------------------------------------
0000025C                           271  
0000025C  43F9 00000365            272  DIVS        LEA         S_DIVS,A1
00000262  4EB8 01AA                273              JSR         PRINT_OP
00000266                           274              
00000266  43F9 0000036A            275  OR          LEA         S_OR,A1
0000026C  4EB8 01AA                276              JSR         PRINT_OP  
00000270                           277  
00000270                           278  *-BIN 9------------------------------------------------------
00000270                           279  
00000270  43F9 0000036D            280  SUB         LEA         S_SUB,A1
00000276  103C 000E                281              MOVE.B      #14,D0
0000027A  4E4F                     282              TRAP        #15
0000027C                           283              
0000027C                           284  *-BIN 11-----------------------------------------------------  
0000027C                           285           
0000027C  43F9 0000030E            286  EOR         LEA         S_EOR,A1
00000282  103C 000E                287              MOVE.B      #14,D0
00000286  4E4F                     288              TRAP        #15
00000288                           289              
00000288                           290  
00000288  43F9 00000312            291  CMP         LEA         S_CMP,A1
0000028E  103C 000E                292              MOVE.B      #14,D0
00000292  4E4F                     293              TRAP        #15
00000294                           294              
00000294                           295  
00000294                           296  *-BIN 12------------------------------------------------------
00000294                           297  
00000294  43F9 00000316            298  MULS        LEA         S_MULS,A1
0000029A  103C 000E                299              MOVE.B      #14,D0
0000029E  4E4F                     300              TRAP        #15
000002A0                           301              
000002A0                           302  *-BIN 13------------------------------------------------------
000002A0                           303  
000002A0  43F9 0000031B            304  ADD         LEA         S_ADD,A1
000002A6  103C 000E                305              MOVE.B      #14,D0
000002AA  4E4F                     306              TRAP        #15
000002AC                           307              
000002AC                           308  
000002AC  43F9 0000031F            309  ADDA        LEA         S_ADDA,A1
000002B2  103C 000E                310              MOVE.B      #14,D0
000002B6  4E4F                     311              TRAP        #15
000002B8                           312              
000002B8                           313       
000002B8                           314  *-BIN 14----------------------------------------------------
000002B8                           315  
000002B8  43F9 0000037E            316  LOGICSHIFT  LEA         S_LEFT,A1
000002BE  4EB8 01AA                317              JSR         PRINT_OP
000002C2  6000 0002                318              BRA         RIGHTORLEFT             
000002C6                           319                
000002C6  3410                     320  RIGHTORLEFT MOVE.W      (A0),D2                 *reload op
000002C8  E14A                     321              LSL.W       #8,D2                   *shift until dr bit is reached
000002CA  B47C 0000                322              CMP.W       #0,D2                   *check if left
000002CE  6700 0022                323              BEQ         LEFT
000002D2  B47C 0001                324              CMP.W       #1,D2                   *check if right
000002D6  6700 0024                325              BEQ         RIGHT  
000002DA                           326                                      
000002DA  43F9 00000378            327  ARITH_SHIFT LEA         S_AS,A1
000002E0  4EB8 01AA                328              JSR         PRINT_OP
000002E4  60E0                     329              BRA         RIGHTORLEFT
000002E6                           330                  
000002E6  43F9 0000037B            331  ROTATE      LEA         S_RO,A1
000002EC  4EB8 01AA                332              JSR         PRINT_OP
000002F0  60D4                     333              BRA         RIGHTORLEFT
000002F2                           334              
000002F2  43F9 0000037E            335  LEFT        LEA          S_LEFT,A1
000002F8  4EB8 01AA                336              JSR          PRINT_OP                       
000002FC                           337             
000002FC                           338             
000002FC  43F9 00000380            339  RIGHT       LEA          S_RIGHT,A1
00000302  4EB8 01AA                340              JSR          PRINT_OP 
00000306                           341             
00000306                           342             
00000306                           343  *-STRINGS---------------------------------------------------
00000306                           344  
00000306  4EB8 01AA                345              JSR         PRINT_OP    
0000030A                           346              
0000030A                           347  
0000030A                           348  *-OPCODE Names----------------------------------------------
0000030A= 4E 4F 50 00              349  S_NOP       DC.B        'NOP',0   
0000030E= 45 4F 52 00              350  S_EOR       DC.B        'EOR',0
00000312= 43 4D 50 00              351  S_CMP       DC.B        'CMP',0
00000316= 4D 55 4C 53 00           352  S_MULS      DC.B        'MULS',0
0000031B= 41 44 44 00              353  S_ADD       DC.B        'ADD',0
0000031F= 41 44 44 41 00           354  S_ADDA      DC.B        'ADDA',0
00000324= 4F 52 49 00              355  S_ORI       DC.B        'ORI',0
00000328= 43 4D 50 49 00           356  S_CMPI      DC.B        'CMPI',0
0000032D= 42 43 4C 52 00           357  S_BCLR      DC.B        'BCLR',0
00000332= 4D 4F 56 45 00           358  S_MOVE      DC.B        'MOVE',0
00000337= 4D 4F 56 45 41 00        359  S_MOVEA     DC.B        'MOVEA',0
0000033D= 42 47 45 00              360  S_BGE       DC.B        'BGE',0
00000341= 42 43 53 00              361  S_BCS       DC.B        'BCS',0
00000345= 42 56 43 00              362  S_BVC       DC.B        'BVC',0
00000349= 42 43 43 00              363  S_BCC       DC.B        'BCC',0                       
0000034D= 52 54 53 00              364  S_RTS       DC.B        'RTS',0
00000351= 4C 45 41 00              365  S_LEA       DC.B        'LEA',0
00000355= 4E 45 47 00              366  S_NEG       DC.B        'NEG',0 
00000359= 4D 4F 56 45 4D 00        367  S_MOVEM     DC.B        'MOVEM',0
0000035F= 53 55 42 2E 51 00        368  S_SUBQ      DC.B        'SUB.Q',0
00000365= 44 49 56 53 00           369  S_DIVS      DC.B        'DIVS',0
0000036A= 4F 52 00                 370  S_OR        DC.B        'OR',0
0000036D= 53 55 42 00              371  S_SUB       DC.B        'SUB',0
00000371= 4A 53 52 00              372  S_JSR       DC.B        'JSR',0
00000375= 4C 53 00                 373  S_LS        DC.B        'LS',0
00000378= 41 53 00                 374  S_AS        DC.B        'AS',0
0000037B= 52 30 00                 375  S_RO        DC.B        'R0',0
0000037E= 4C 00                    376  S_LEFT      DC.B        'L',0
00000380= 52 00                    377  S_RIGHT     DC.B        'R',0
00000382                           378  
00000382                           379  
00000382                           380  
00000382                           381  
Line 382 WARNING: END directive missing, starting address not set

No errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD                 2A0
ADDA                2AC
ARITH_SHIFT         2DA
BCC                 252
BCLR                1C8
BCS                 23E
BGE                 234
BIN_0               8C
BIN_10              150
BIN_11              150
BIN_12              16A
BIN_13              16E
BIN_14              18A
BIN_15              1AA
BIN_4               CC
BIN_5               10A
BIN_6               10E
BIN_7               138
BIN_8               138
BIN_9               14C
BIN_MOVE            B8
BVC                 248
CMP                 288
CMPI                1BC
DIVS                25C
EOR                 27C
JSR                 214
JT_START            0
LEA                 200
LEFT                2F2
LOGICSHIFT          2B8
MOVE                1D4
MOVEA               1E0
MOVEM               20A
MULS                294
NEG                 21E
NOP                 1EC
OR                  266
ORI                 1B0
PRINT_OP            1AA
RIGHT               2FC
RIGHTORLEFT         2C6
ROTATE              2E6
RTS                 1F6
SUB                 270
SUBQ                228
S_ADD               31B
S_ADDA              31F
S_AS                378
S_BCC               349
S_BCLR              32D
S_BCS               341
S_BGE               33D
S_BVC               345
S_CMP               312
S_CMPI              328
S_DIVS              365
S_EOR               30E
S_JSR               371
S_LEA               351
S_LEFT              37E
S_LS                375
S_MOVE              332
S_MOVEA             337
S_MOVEM             359
S_MULS              316
S_NEG               355
S_NOP               30A
S_OR                36A
S_ORI               324
S_RIGHT             380
S_RO                37B
S_RTS               34D
S_SUB               36D
S_SUBQ              35F
